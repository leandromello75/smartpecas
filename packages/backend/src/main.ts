// =============================================================================
// SmartPe√ßas ERP - Bootstrap da Aplica√ß√£o (VERS√ÉO DE PRODU√á√ÉO)
// =============================================================================
// Arquivo: backend/src/main.ts
//
// Descri√ß√£o: Ponto de entrada da aplica√ß√£o. Configura middlewares globais de
// seguran√ßa, performance, valida√ß√£o, CORS e documenta√ß√£o da API.
//
// Vers√£o: 2.2
// =============================================================================

import { NestFactory } from '@nestjs/core';
import { AppModule } from './app.module';
import { Logger, ValidationPipe } from '@nestjs/common';
import helmet from 'helmet';
import compression from 'compression';
import { SwaggerModule, DocumentBuilder } from '@nestjs/swagger';

async function bootstrap() {
  const app = await NestFactory.create(AppModule);
  const logger = new Logger('Bootstrap');
  const port = process.env.PORT || 3000;

  // ======================================================
  // === Middlewares Globais de Seguran√ßa e Performance ===
  // ======================================================
  
  // üõ°Ô∏è SEGURAN√áA: Configura√ß√£o estrita de CORS para produ√ß√£o.
  app.enableCors({
    origin: process.env.FRONTEND_URL || 'http://localhost:3001', // Use uma vari√°vel de ambiente para o dom√≠nio do frontend
    methods: 'GET,HEAD,PUT,PATCH,POST,DELETE,OPTIONS',
    credentials: true,
  });

  // üõ°Ô∏è SEGURAN√áA: Adiciona um conjunto de headers HTTP seguros.
  app.use(helmet());

  // üöÄ PERFORMANCE: Habilita a compress√£o Gzip para as respostas.
  app.use(compression());

  // ======================================================
  // === Pipes e Hooks Globais ===
  // ======================================================

  // ‚úÖ VALIDA√á√ÉO: Pipe global que valida e transforma DTOs de entrada.
  app.useGlobalPipes(
    new ValidationPipe({
      whitelist: true,
      forbidNonWhitelisted: true, // Rejeita requisi√ß√µes com propriedades n√£o esperadas.
      transform: true, // Transforma os payloads para inst√¢ncias das classes DTO.
    }),
  );
  
  // ‚úÖ CONFIABILIDADE: Habilita o encerramento gracioso da aplica√ß√£o.
  app.enableShutdownHooks();
  
  // ======================================================
  // === Documenta√ß√£o da API (Swagger/OpenAPI) ===
  // ======================================================
  
  // S√≥ gera a documenta√ß√£o em ambiente de desenvolvimento
  if (process.env.NODE_ENV === 'development') {
    const config = new DocumentBuilder()
      .setTitle('SmartPe√ßas ERP API')
      .setDescription('Documenta√ß√£o da API para o sistema de gest√£o SmartPe√ßas.')
      .setVersion('1.0')
      .addBearerAuth() // Adiciona o campo para o token JWT na interface
      .build();
    const document = SwaggerModule.createDocument(app, config);
    SwaggerModule.setup('api-docs', app, document); // A documenta√ß√£o estar√° em /api-docs
    logger.log(`üìÑ Documenta√ß√£o da API dispon√≠vel em http://localhost:${port}/api-docs`);
  }

  // Inicia o servidor
  await app.listen(port);
  logger.log(`üöÄ SmartPe√ßas ERP rodando na porta: ${port}`);
  logger.log(`üí° Ambiente: ${process.env.NODE_ENV}`);
}

bootstrap();