// =============================================================================
// SmartPeças ERP - Schema Prisma (Versão Consolidada)
// =============================================================================
// Arquivo: /backend/prisma/schema.prisma
//
// Descrição: Estrutura unificada com suporte a multi-tenancy real via PostgreSQL
// usando schemas distintos por empresa (tenant). O controle de tenants e usuários
// administrativos ocorre no schema público.
//
// Versão: 1.0.0
//
// Equipe SmartPeças
// Criado em: 12/06/2025
// =============================================================================

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL") // Esta variável será lida do .env pelo Docker Compose
}

// =============================================================================
// Modelos GLOBAIS (vivem no schema "public")
// =============================================================================

model Tenant {
  id        String   @id @default(uuid())
  name      String   @unique
  schema    String   @unique // O nome do schema no PostgreSQL para este tenant
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relação com os usuários administradores deste tenant
  adminUsers AdminUser[]

  @@map("tenants")
  @@schema("public")
}

model AdminUser {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relação de volta para o Tenant
  tenantId  String
  tenant    Tenant   @relation(fields: [tenantId], references: [id])

  @@map("admin_users")
  @@schema("public") // Admins também vivem no schema público
}


// =============================================================================
// Modelos ESPECÍFICOS DO TENANT (vivem em schemas dinâmicos)
// =============================================================================
// Estes modelos não precisam do atributo @@schema(), pois o Prisma
// irá apontar para o schema correto em tempo de execução.

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  name      String?
  role      String   @default("user") // Ex: "manager", "sales", "stock"
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}

model Product {
  id          String   @id @default(uuid())
  name        String
  description String?
  price       Decimal  @db.Decimal(10, 2)
  sku         String?  @unique
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("products")
}

// Adicione outros modelos específicos do tenant aqui...
