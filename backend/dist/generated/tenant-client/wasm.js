
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.10.1
 * Query Engine version: 9b628578b3b7cae625e8c927178f15a170e74a9c
 */
Prisma.prismaVersion = {
  client: "6.10.1",
  engine: "9b628578b3b7cae625e8c927178f15a170e74a9c"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.TenantScalarFieldEnum = {
  id: 'id'
};

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  password: 'password',
  name: 'name',
  role: 'role',
  isActive: 'isActive',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  tenantId: 'tenantId'
};

exports.Prisma.ProductScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  price: 'price',
  sku: 'sku',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  tenantId: 'tenantId'
};

exports.Prisma.ClienteScalarFieldEnum = {
  id: 'id',
  tipoCliente: 'tipoCliente',
  nome: 'nome',
  nomeFantasia: 'nomeFantasia',
  documento: 'documento',
  documentoTipo: 'documentoTipo',
  documentoValido: 'documentoValido',
  documentoValidadoEm: 'documentoValidadoEm',
  inscricaoEstadual: 'inscricaoEstadual',
  inscricaoMunicipal: 'inscricaoMunicipal',
  email: 'email',
  telefone: 'telefone',
  celular: 'celular',
  website: 'website',
  cep: 'cep',
  logradouro: 'logradouro',
  numero: 'numero',
  complemento: 'complemento',
  bairro: 'bairro',
  cidade: 'cidade',
  estado: 'estado',
  pais: 'pais',
  isInadimplente: 'isInadimplente',
  limiteCredito: 'limiteCredito',
  limiteCreditoUsado: 'limiteCreditoUsado',
  diasPagamento: 'diasPagamento',
  formaPagamentoPadrao: 'formaPagamentoPadrao',
  descontoMaximo: 'descontoMaximo',
  comissaoVendedor: 'comissaoVendedor',
  observacoes: 'observacoes',
  tipoNegocio: 'tipoNegocio',
  especialidades: 'especialidades',
  marcasAtendidas: 'marcasAtendidas',
  certificacoes: 'certificacoes',
  temOficina: 'temOficina',
  temBalcao: 'temBalcao',
  totalPedidos: 'totalPedidos',
  valorTotalCompras: 'valorTotalCompras',
  ultimaCompra: 'ultimaCompra',
  frequenciaCompra: 'frequenciaCompra',
  scoreCliente: 'scoreCliente',
  acessoRestrito: 'acessoRestrito',
  gruposAcesso: 'gruposAcesso',
  nivelConfidencialidade: 'nivelConfidencialidade',
  isAtivo: 'isAtivo',
  deletedAt: 'deletedAt',
  deletedBy: 'deletedBy',
  deleteReason: 'deleteReason',
  criadoEm: 'criadoEm',
  atualizadoEm: 'atualizadoEm',
  criadoPor: 'criadoPor',
  criadoPorNome: 'criadoPorNome',
  criadoPorIp: 'criadoPorIp',
  atualizadoPor: 'atualizadoPor',
  atualizadoPorNome: 'atualizadoPorNome',
  atualizadoPorIp: 'atualizadoPorIp',
  versao: 'versao',
  anoMes: 'anoMes',
  trimestre: 'trimestre',
  dadosCnpjApi: 'dadosCnpjApi',
  dadosCepApi: 'dadosCepApi',
  ultimaConsultaCnpj: 'ultimaConsultaCnpj',
  ultimaConsultaCep: 'ultimaConsultaCep',
  tenantId: 'tenantId'
};

exports.Prisma.EnderecoClienteScalarFieldEnum = {
  id: 'id',
  clienteId: 'clienteId',
  tipo: 'tipo',
  descricao: 'descricao',
  cep: 'cep',
  logradouro: 'logradouro',
  numero: 'numero',
  complemento: 'complemento',
  bairro: 'bairro',
  cidade: 'cidade',
  estado: 'estado',
  pais: 'pais',
  isPrincipal: 'isPrincipal',
  isAtivo: 'isAtivo',
  criadoEm: 'criadoEm',
  atualizadoEm: 'atualizadoEm'
};

exports.Prisma.ContatoClienteScalarFieldEnum = {
  id: 'id',
  clienteId: 'clienteId',
  nome: 'nome',
  cargo: 'cargo',
  email: 'email',
  telefone: 'telefone',
  celular: 'celular',
  observacoes: 'observacoes',
  isPrincipal: 'isPrincipal',
  isAtivo: 'isAtivo',
  criadoEm: 'criadoEm',
  atualizadoEm: 'atualizadoEm'
};

exports.Prisma.VeiculoClienteScalarFieldEnum = {
  id: 'id',
  clienteId: 'clienteId',
  veiculoGlobalId: 'veiculoGlobalId',
  placa: 'placa',
  cor: 'cor',
  anoFabricacao: 'anoFabricacao',
  anoModelo: 'anoModelo',
  quilometragem: 'quilometragem',
  observacoes: 'observacoes',
  isPrincipal: 'isPrincipal',
  isAtivo: 'isAtivo',
  criadoEm: 'criadoEm',
  atualizadoEm: 'atualizadoEm'
};

exports.Prisma.HistoricoClienteScalarFieldEnum = {
  id: 'id',
  clienteId: 'clienteId',
  tipo: 'tipo',
  descricao: 'descricao',
  valor: 'valor',
  observacoes: 'observacoes',
  criadoEm: 'criadoEm',
  criadoPor: 'criadoPor'
};

exports.Prisma.OrderScalarFieldEnum = {
  id: 'id',
  orderDate: 'orderDate',
  totalAmount: 'totalAmount',
  status: 'status',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  tenantId: 'tenantId',
  customerId: 'customerId',
  userId: 'userId'
};

exports.Prisma.OrderItemScalarFieldEnum = {
  id: 'id',
  quantity: 'quantity',
  unitPrice: 'unitPrice',
  orderId: 'orderId',
  productId: 'productId'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};
exports.Role = exports.$Enums.Role = {
  USER: 'USER',
  ADMIN: 'ADMIN',
  GUEST: 'GUEST'
};

exports.TipoCliente = exports.$Enums.TipoCliente = {
  PESSOA_FISICA: 'PESSOA_FISICA',
  PESSOA_JURIDICA: 'PESSOA_JURIDICA'
};

exports.TipoEndereco = exports.$Enums.TipoEndereco = {
  COMERCIAL: 'COMERCIAL',
  RESIDENCIAL: 'RESIDENCIAL',
  ENTREGA: 'ENTREGA',
  COBRANCA: 'COBRANCA'
};

exports.Prisma.ModelName = {
  Tenant: 'Tenant',
  User: 'User',
  Product: 'Product',
  Cliente: 'Cliente',
  EnderecoCliente: 'EnderecoCliente',
  ContatoCliente: 'ContatoCliente',
  VeiculoCliente: 'VeiculoCliente',
  HistoricoCliente: 'HistoricoCliente',
  Order: 'Order',
  OrderItem: 'OrderItem'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
