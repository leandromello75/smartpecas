# =============================================================================
# SmartPe√ßas ERP - docker-compose.yml (Vers√£o de Produ√ß√£o)
# =============================================================================
# Arquivo: /smartpecas/docker-compose.yml
#
# Descri√ß√£o: Orquestra os servi√ßos de produ√ß√£o do SmartPe√ßas ERP.
#
# Vers√£o: Final 2.0
# =============================================================================

version: "3.9"

services:
  # üêò Banco de Dados PostgreSQL
  db:
    image: postgres:15-alpine
    container_name: smartpecas_db
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - smartpecas_net
    ports:
      # OPCIONAL: Para debug externo. Mantenha a porta 5432 bloqueada no firewall.
      - "54321:5432"
    healthcheck:
      # ‚úÖ VERIFICA se o banco est√° realmente pronto para aceitar conex√µes.
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # üöÄ Backend NestJS
  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    container_name: smartpecas_backend
    restart: unless-stopped
    env_file:
      - .env
    ports:
      # ‚úÖ Usa a porta din√¢mica do .env, como sugerido pela equipe.
      - "${PORT}:${PORT}"
    depends_on:
      db:
        # ‚úÖ Garante que o backend s√≥ inicia AP√ìS o healthcheck do 'db' passar.
        condition: service_healthy
    networks:
      - smartpecas_net
    # ‚ùå A linha de 'volumes' foi REMOVIDA, pois √© um padr√£o de desenvolvimento, n√£o de produ√ß√£o.

volumes:
  postgres_data:
    driver: local

networks:
  # ‚úÖ Usa a rede customizada, como sugerido pela equipe.
  smartpecas_net:
    driver: bridge
